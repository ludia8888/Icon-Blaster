version: '3.8'

services:
  # PostgreSQL for Audit Service
  audit-postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: audit_user
      POSTGRES_PASSWORD: audit_password
      POSTGRES_DB: audit_db
    ports:
      - "5434:5432"
    volumes:
      - audit_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U audit_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  # InfluxDB for time series data
  influxdb:
    image: influxdb:2.7-alpine
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: admin_password
      DOCKER_INFLUXDB_INIT_ORG: audit_org
      DOCKER_INFLUXDB_INIT_BUCKET: audit_events
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: audit_token
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MinIO for object storage
  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Audit Service
  audit-service:
    build:
      context: ./audit-service
      dockerfile: Dockerfile
    environment:
      # Database
      DATABASE_URL: postgresql+asyncpg://audit_user:audit_password@audit-postgres:5432/audit_db
      
      # Redis
      REDIS_URL: redis://oms-redis:6379
      
      # Message Brokers (optional)
      NATS_URL: nats://nats:4222
      KAFKA_BOOTSTRAP_SERVERS: '["kafka:9092"]'
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      
      # Time Series DB
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: audit_token
      INFLUXDB_ORG: audit_org
      INFLUXDB_BUCKET: audit_events
      
      # Object Storage
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: audit-artifacts
      MINIO_USE_SSL: "false"
      
      # Application
      APP_NAME: audit-service
      APP_ENV: development
      LOG_LEVEL: INFO
      PORT: 8002
      
      # Integration with user-service
      USER_SERVICE_URL: http://user-service:8001
      
    ports:
      - "8003:8002"
    depends_on:
      audit-postgres:
        condition: service_healthy
      influxdb:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./audit-service:/app
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running database migrations...' &&
        cd /app && alembic upgrade head || echo 'Migration failed, continuing...' &&
        echo 'Starting audit service...' &&
        cd /app && export PYTHONPATH=/app:$PYTHONPATH && python -m uvicorn main:app --host 0.0.0.0 --port 8002 --reload
      "

  # NATS for messaging (optional)
  nats:
    image: nats:2-alpine
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["--js"]
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4222"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  audit_postgres_data:
  influxdb_data:
  minio_data:

networks:
  default:
    name: arrakis-project_oms-network
    external: true