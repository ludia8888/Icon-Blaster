syntax = "proto3";

package scheduler;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

service SchedulerService {
    // Job management
    rpc CreateJob(CreateJobRequest) returns (JobResponse);
    rpc GetJob(GetJobRequest) returns (JobResponse);
    rpc UpdateJob(UpdateJobRequest) returns (JobResponse);
    rpc DeleteJob(DeleteJobRequest) returns (DeleteJobResponse);
    rpc ListJobs(ListJobsRequest) returns (ListJobsResponse);
    
    // Job execution
    rpc RunJob(RunJobRequest) returns (RunJobResponse);
    rpc GetJobStatus(GetJobStatusRequest) returns (JobStatusResponse);
    rpc GetJobHistory(GetJobHistoryRequest) returns (JobHistoryResponse);
    
    // Scheduler control
    rpc PauseScheduler(PauseSchedulerRequest) returns (PauseSchedulerResponse);
    rpc ResumeScheduler(ResumeSchedulerRequest) returns (ResumeSchedulerResponse);
    rpc GetSchedulerStatus(GetSchedulerStatusRequest) returns (SchedulerStatusResponse);
}

message Job {
    string id = 1;
    string name = 2;
    string description = 3;
    
    oneof schedule {
        CronSchedule cron = 4;
        IntervalSchedule interval = 5;
        OneTimeSchedule one_time = 6;
    }
    
    JobConfig config = 7;
    google.protobuf.Timestamp created_at = 8;
    google.protobuf.Timestamp updated_at = 9;
    bool enabled = 10;
    string status = 11;
    google.protobuf.Timestamp next_run_time = 12;
    google.protobuf.Timestamp last_run_time = 13;
}

message CronSchedule {
    string cron_expression = 1;  // e.g., "0 0 * * *" for daily at midnight
    string timezone = 2;         // e.g., "UTC", "America/New_York"
}

message IntervalSchedule {
    int32 interval_seconds = 1;
    google.protobuf.Timestamp start_time = 2;
}

message OneTimeSchedule {
    google.protobuf.Timestamp run_at = 1;
}

message JobConfig {
    string job_type = 1;  // e.g., "embedding_refresh", "data_sync", "report_generation"
    google.protobuf.Struct parameters = 2;
    int32 max_retries = 3;
    int32 retry_delay_seconds = 4;
    int32 timeout_seconds = 5;
    repeated string tags = 6;
}

message JobExecution {
    string id = 1;
    string job_id = 2;
    google.protobuf.Timestamp started_at = 3;
    google.protobuf.Timestamp finished_at = 4;
    string status = 5;  // "running", "success", "failed", "timeout"
    string error_message = 6;
    google.protobuf.Struct result = 7;
    int32 retry_count = 8;
}

// Request/Response messages
message CreateJobRequest {
    Job job = 1;
}

message JobResponse {
    Job job = 1;
}

message GetJobRequest {
    string job_id = 1;
}

message UpdateJobRequest {
    string job_id = 1;
    Job job = 2;
}

message DeleteJobRequest {
    string job_id = 1;
}

message DeleteJobResponse {
    bool success = 1;
    string message = 2;
}

message ListJobsRequest {
    int32 page = 1;
    int32 page_size = 2;
    repeated string tags = 3;
    string status = 4;
    bool enabled_only = 5;
}

message ListJobsResponse {
    repeated Job jobs = 1;
    int32 total = 2;
    int32 page = 3;
    int32 page_size = 4;
}

message RunJobRequest {
    string job_id = 1;
    google.protobuf.Struct override_parameters = 2;
}

message RunJobResponse {
    string execution_id = 1;
    string message = 2;
}

message GetJobStatusRequest {
    string job_id = 1;
}

message JobStatusResponse {
    string job_id = 1;
    string status = 2;
    JobExecution current_execution = 3;
    google.protobuf.Timestamp next_run_time = 4;
}

message GetJobHistoryRequest {
    string job_id = 1;
    int32 limit = 2;
    string status_filter = 3;
}

message JobHistoryResponse {
    repeated JobExecution executions = 1;
}

message PauseSchedulerRequest {
    repeated string job_ids = 1;  // Empty means pause all
}

message PauseSchedulerResponse {
    bool success = 1;
    int32 jobs_paused = 2;
}

message ResumeSchedulerRequest {
    repeated string job_ids = 1;  // Empty means resume all
}

message ResumeSchedulerResponse {
    bool success = 1;
    int32 jobs_resumed = 2;
}

message GetSchedulerStatusRequest {}

message SchedulerStatusResponse {
    bool is_running = 1;
    int32 total_jobs = 2;
    int32 active_jobs = 3;
    int32 paused_jobs = 4;
    int32 running_executions = 5;
    google.protobuf.Timestamp server_time = 6;
}