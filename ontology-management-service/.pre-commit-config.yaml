# Pre-commit hooks for OMS
# Install: pip install pre-commit && pre-commit install

repos:
  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.11

  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black"]

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args: ["--max-line-length=100", "--ignore=E203,W503"]

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-all]
        args: ["--ignore-missing-imports"]

  # OMS Naming Convention Check
  - repo: local
    hooks:
      - id: oms-naming-convention
        name: OMS Naming Convention Check
        entry: python -m core.validation.ci_integration
        language: python
        types: [python]
        files: ^(core|api)/.*\.py$
        args: ['--format', 'text', '--fail-on-error']
        additional_dependencies:
          - pydantic>=2.0.0
          - typing-extensions>=4.0.0

  # Security checks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']

  # YAML validation
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-yaml
      - id: check-json
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-merge-conflict
      - id: debug-statements

# Configuration
default_language_version:
  python: python3.11

exclude: |
  (?x)^(
    .*\.min\.js$|
    .*\.min\.css$|
    node_modules/|
    venv/|
    \.venv/|
    dist/|
    build/|
    \.git/|
    __pycache__/|
    \.mypy_cache/|
    \.pytest_cache/|
    migrations/
  )